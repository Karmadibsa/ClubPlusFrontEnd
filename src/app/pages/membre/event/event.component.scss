// event.component.scss

// --- Importation des variables globales si nécessaire ---
// @import 'path/to/variables';

// --- Styles spécifiques à la page Événements ---

// En-tête de la page
.page-header {
  margin-bottom: var(--spacing-lg, 24px); // Espace sous le titre
  padding-bottom: var(--spacing-md, 16px); // Espace avant bordure
  border-bottom: 1px solid var(--border-color, #dee2e6); // Séparateur

  .page-title {
    font-size: 1.8rem; // Taille cohérente avec autres pages
    color: var(--main-blue);
    margin: 0; // Reset marge h1
    // display: flex; align-items: center; gap: ...; // Si icône ou autre
  }
}

// Section des Filtres
.filters-section {
  margin-bottom: var(--spacing-lg, 24px);
}

// Indicateur de chargement
.loading-indicator {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: var(--spacing-sm, 8px);
  padding: var(--spacing-xl, 32px) 0;
  font-size: 1.1rem;
  color: var(--text-medium, #666);
  min-height: 200px; // Pour éviter saut de page pendant chargement
}

// Section de la liste des événements
.event-list-section {
  // Contient la grille ou le message "aucun événement"
}

// Grille des événements
.event-grid {
  display: grid;
  // Utilisation de minmax avec 1fr pour la taille max
  grid-template-columns: repeat(auto-fill, minmax(300px, 2fr)); // Taille min un peu plus grande
  gap: var(--spacing-lg, 24px); // Espace plus généreux entre les cartes
  margin-bottom: var(--spacing-lg, 24px); // Espace avant pagination
}

// Message si aucun événement
.no-events-message {
  text-align: center;
  font-style: italic;
  color: var(--text-medium, #666);
  padding: var(--spacing-xl, 32px) var(--spacing-md, 16px);
  border: 1px dashed var(--border-color, #dee2e6); // Style distinctif
  border-radius: var(--border-radius, 8px);
  min-height: 150px; // Pour occuper un peu d'espace
  display: flex;
  align-items: center;
  justify-content: center;
}

// Section Pagination
.pagination-section {
  margin-top: var(--spacing-lg, 24px);
  display: flex; // Permet de centrer le composant pagination
  justify-content: center;
}

// --- Styles pour les éléments DANS app-filter-event ---
// Ces styles devraient idéalement être DANS app-filter-event.scss,
// mais si vous les gérez ici, assurez la cohérence :

// Conteneur global du filtre (si besoin de le styler depuis ici)
:host ::ng-deep app-filter-event .filters-container { // Exemple de ciblage profond
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-md, 16px);
  align-items: flex-end; // Aligne les éléments sur le bas
  margin-bottom: var(--spacing-lg, 24px); // Si pas dans .filters-section
}

// Styles communs pour les groupes de filtre
:host ::ng-deep .filter-group {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs, 4px);
}

// Labels dans les filtres
:host ::ng-deep .filter-group label {
  font-weight: 500; // Moins gras que 'bold'
  font-size: 0.9rem;
  color: var(--text-dark);
}

// Inputs dans les filtres (harmonisation avec styles globaux)
:host ::ng-deep .filter-group input[type="text"],
:host ::ng-deep .filter-group input[type="date"],
:host ::ng-deep .filter-group input[type="time"] {
  padding: 8px 10px; // Plus petit ?
  border: 1px solid var(--border-color, #ccc);
  border-radius: var(--border-radius-sm, 4px);
  font-size: 0.95rem;
  height: auto; // Laisse le padding définir la hauteur

  &:focus {
    outline: none;
    border-color: var(--main-orange);
    box-shadow: 0 0 0 2px rgba(var(--main-orange-rgb, 255, 107, 53), 0.25);
  }
}
// Supprime la bordure orange spécifique si non désirée
// :host ::ng-deep .date-picker input,
// :host ::ng-deep .time-picker input,
// :host ::ng-deep .search-bar {
//   border-bottom: none; // Annule bordure orange spécifique
// }

// Barre de recherche (peut prendre plus de place)
:host ::ng-deep .search-group {
  flex-grow: 1;
}

// Styles Checkbox (si gérés ici et non dans app-filter-event)
:host ::ng-deep .checkbox-container {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm, 8px);

  input[type="checkbox"] {
    appearance: none;
    width: 18px; height: 18px; // Légèrement plus petit
    border: 2px solid var(--main-blue);
    border-radius: var(--border-radius-sm, 4px);
    cursor: pointer;
    transition: background-color 0.2s ease, border-color 0.2s ease;
    position: relative; // Pour le checkmark

    &:checked {
      background-color: var(--main-orange);
      border-color: var(--main-orange);
      // Optionnel: Ajouter un checkmark via ::after
      &::after {
        content: '';
        display: block;
        position: absolute;
        top: 1px; left: 5px; // Positionnement du checkmark
        width: 4px; height: 8px;
        border: solid white;
        border-width: 0 2px 2px 0;
        transform: rotate(45deg);
      }
    }
    &:focus-visible { // Style focus
      outline: none;
      box-shadow: 0 0 0 3px rgba(var(--main-orange-rgb), 0.4);
    }
  }
  label { font-weight: 500; font-size: 0.95rem; margin: 0; }
}

// Contrôles de Tri (si gérés ici)
:host ::ng-deep .sort-controls {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-sm, 8px);
  // margin-bottom: ...; // Géré par le gap du parent ou .filters-section

  button {
    // Utiliser les styles .btn .btn-secondary (ou autre) globaux
    // Si spécifique:
    // padding: 6px 12px; font-size: 0.9rem; background-color: ...; etc.
  }
}

// --- Responsive ---
@media screen and (max-width: 768px) {
  .page-header {
    margin-bottom: var(--spacing-lg);
    .page-title { font-size: 1.5rem; }
  }

  .event-grid {
    // Une seule colonne sur mobile
    grid-template-columns: 1fr;
    gap: var(--spacing-md, 16px); // Espace réduit
  }

}
