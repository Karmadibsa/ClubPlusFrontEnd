/*------------------------------------*\
  #COMPOSANT: SIDEBAR / BOTTOM NAV
  Styles pour la navigation principale.
  Desktop: Sidebar latérale fixe, réductible via .is-collapsed.
  Mobile: Barre de navigation inférieure fixe.
\*------------------------------------*/

// --- Utilisation des variables globales de styles.txt ---
// Ex: var(--main-blue), var(--main-orange), var(--spacing-md), etc.

// --- Variable locale pour la largeur réduite ---
:host {
  --sidebar-width-collapsed: 6%; // Largeur en mode icônes seules (ajustable)
  // Variable RGB pour transparence (si main-orange-rgb n'est pas global ou pour override local)
  --main-orange-rgb: 255, 107, 53; // Assurez-vous que cela correspond à votre --main-orange
  // Variable pour taille icône mobile (si différente de --icon-size)
  --icon-size-mobile: 22px; // Exemple de taille pour mobile
  // Variable pour hauteur barre mobile
  --bottom-nav-height-mobile: 60px; // Hauteur standard pour la barre inférieure mobile
}

/* =================================== */
/* == STYLES SIDEBAR DESKTOP (> 768px) == */
/* =================================== */
.sidebar {
  // --- Structure et Positionnement ---
  width: 14%; // Votre largeur initiale (ajustez si besoin)
  min-width: 200px; // Votre min-width initiale (ajustez si besoin)
  background-color: var(--main-blue);
  color: white;
  padding: var(--spacing-md) var(--spacing-sm); // Utilisation des variables globales
  display: flex; // Caché par défaut sur mobile (sera changé dans media query)
  flex-direction: column;
  height: 100vh; // Prend toute la hauteur
  position: fixed; // Fixe à l'écran
  left: 0;
  top: 0;
  z-index: 100; // Au-dessus du contenu
  justify-content: space-between; // Espace entre logo/menu et footer
  box-sizing: border-box; // Padding inclus dans la taille
  // --- Transition pour largeur (animée) ---
  transition: width 0.3s ease, min-width 0.3s ease;

  // --- Logo ---
  .logo-container {
    padding: var(--spacing-md) 0;
    text-align: center;
    margin-bottom: var(--spacing-lg);
    position: relative; // Pour positionner l'icône réduite si ajoutée
    // *** CORRECTION SAUT VERTICAL: Hauteur minimale fixe et Flexbox ***
    min-height: 100px; // Ajustez cette valeur pour correspondre à la hauteur de votre logo + padding vertical
    display: flex;
    align-items: center; // Centre verticalement le contenu
    justify-content: center; // Centre horizontalement le contenu
    overflow: hidden; // Empêche le logo de déborder pendant la transition
    transition: min-height 0.3s ease, padding 0.3s ease; // Anime aussi le padding si besoin

    .logo { // Logo normal
      width: 70%; // Ajustez selon la taille souhaitée
      height: auto;
      max-width: 120px; // Limite la taille max
      display: block;
      // Transition disparition (sans délai initial pour réduire flash)
      transition: opacity 0.2s ease, transform 0.3s ease;
      opacity: 1;
      transform: scale(1);
      position: relative; // Pour être au-dessus de l'icône collapsée si elle existe
      z-index: 2;
    }

    // Optionnel: Si vous ajoutez une icône pour le mode réduit dans le HTML
    .logo-collapsed-icon {
      display: block; // Présent dans le DOM mais caché initialement
      color: white;
      width: 32px; height: 32px; // Taille de l'icône
      position: absolute; // Superposé au centre
      top: 50%; left: 50%;
      transform: translate(-50%, -50%) scale(0.5); // Commence petit
      opacity: 0; // Commence caché
      pointer-events: none; // Non cliquable quand caché
      transition: opacity 0.2s ease-in 0.1s, transform 0.3s ease; // Transition d'apparition
      z-index: 1;
    }
  }

  // --- Menu Items ---
  .menu-items {
    list-style-type: none;
    padding: 0;
    margin: 0;
    flex-grow: 1; // Prend l'espace vertical restant
    overflow-y: auto; // Ajoute un scroll si le contenu dépasse
    overflow-x: hidden; // Empêche le scroll horizontal global
  }

  ul.menu-items li {
    margin-bottom: var(--spacing-sm);
    position: relative; // Pour contexte de positionnement si besoin
    overflow: hidden; // *** CORRECTION POTENTIELLE SCROLLBAR SUR HOVER TEXTE LONG ***
  }

  ul.menu-items li a {
    display: flex;
    align-items: center; // *** CORRECTION ALIGNEMENT VERTICAL ICÔNE/TEXTE ***
    gap: 12px; // Espace entre icône et texte
    padding: 10px 15px; // Padding interne du lien
    color: white;
    text-decoration: none;
    border-radius: var(--border-radius);
    // Transition séparée pour éviter conflit avec width/opacity/transform
    transition: background-color 0.3s ease, color 0.3s ease, transform 0.3s ease;
    white-space: nowrap; // Empêche le texte de passer à la ligne
    overflow: hidden; // Empêche texte de déborder PENDANT la transition de collapse

    lucide-icon {
      width: var(--icon-size); // Utilise la variable globale
      height: var(--icon-size);
      min-width: var(--icon-size); // Empêche l'icône de rétrécir
      stroke: currentColor; // Hérite la couleur du lien
      stroke-width: 2px;
      flex-shrink: 0; // Empêche l'icône de rétrécir si le texte est long
    }

    .menu-item-text {
      flex-grow: 1;
      overflow: hidden;
      text-overflow: ellipsis;
      transition: opacity 0.2s ease, max-width 0.3s ease 0.05s, margin-left 0.3s ease 0.05s;
      opacity: 1;
      max-width: 200px;
      margin-left: 0;
      will-change: opacity, max-width, margin-left; /* Ajouté */
      transform: translateZ(0); /* ou backface-visibility: hidden; */ /* Ajouté */
    }

    // Effet survol (uniquement si NON réduit)
    // On cible le lien <a> directement SANS vérifier .is-collapsed ici,
    // car on annulera cet effet spécifique dans la section .is-collapsed
    &:hover {
      background: rgba(255, 255, 255, 0.1); // Fond léger au survol
      // transform: translateX(2px); // Votre ancien décalage, peut être retiré si non désiré
    }

    // Style item actif (classe ajoutée par routerLinkActive)
    &.page_actuelle {
      background-color: var(--main-orange);
      color: white;
      font-weight: 600;
      // Annule la transformation de survol pour l'élément actif
      &:hover {
        background-color: var(--main-orange); // Garde la couleur orange
        transform: none; // Pas de décalage
      }
    }

    // Style pour l'accessibilité au focus clavier
    &:focus-visible {
      outline: 2px solid white;
      outline-offset: -2px; // Met l'outline à l'intérieur
      background: rgba(255, 255, 255, 0.1); // Similaire au hover
      transform: none; // Pas de décalage au focus
    }
  }

  // --- Footer (avec bouton Toggle UNIQUEMENT) ---
  .sidebar-footer {
    padding: var(--spacing-sm) 0; // Padding vertical réduit
    margin-top: var(--spacing-md); // Espace au-dessus du footer
    display: flex;
    justify-content: center; // Centre le bouton toggle par défaut
    align-items: center;
    transition: justify-content 0.3s ease; // Anime si la justification change (utile si on ajoute d'autres boutons plus tard)

    .toggle-btn { // Style du bouton Toggle
      background: none;
      border: none;
      color: white;
      padding: var(--spacing-sm);
      border-radius: 50%; // Bouton rond
      cursor: pointer;
      display: flex; // Pour centrer l'icône dans le bouton
      align-items: center;
      justify-content: center;
      transition: background-color var(--transition-standard), color var(--transition-standard);

      lucide-icon {
        width: calc(var(--icon-size) * 0.9); // Légèrement plus petit que les icônes de menu
        height: calc(var(--icon-size) * 0.9);
        stroke: currentColor;
      }
      &:hover {
        background-color: rgba(255, 255, 255, 0.15); // Effet de survol
      }
      &:focus-visible {
        outline: 2px solid white; // Style focus visible
        outline-offset: 2px;
        background-color: rgba(255, 255, 255, 0.15);
      }
    }
    // Pas de .logout-btn ici, comme demandé
  }


  /* ======================================== */
  /* == STYLES QUAND RÉDUIT (.is-collapsed) == */
  /* ======================================== */
  &.is-collapsed {
    // --- Réduction Largeur ---
    width: var(--sidebar-width-collapsed);
    min-width: var(--sidebar-width-collapsed);

    // --- Logo Réduit ---
    .logo-container {
      min-height: 80px; // Maintient la hauteur pour éviter saut vertical
      padding: var(--spacing-md); // Ajuste padding si icône alternative est utilisée

      .logo { // Masque logo normal
        opacity: 0;
        transform: scale(0.5); // Effet de rétrécissement
        pointer-events: none; // Non interactif
      }
      // Si .logo-collapsed-icon existe dans le HTML :
      .logo-collapsed-icon { // Affiche icône réduite
        opacity: 1;
        transform: translate(-50%, -50%) scale(1); // Retourne à taille normale
        pointer-events: auto; // Interactif
      }
    }

    // --- Menu Items Réduits ---
    ul.menu-items li a {
      justify-content: center; // Centre l'icône horizontalement
      padding: 12px 0; // Padding vertical, horizontal reset car centré
      gap: 0; // Pas d'espace car texte caché

      .menu-item-text {
        opacity: 0;
        max-width: 0;
        margin-left: -10px;
        pointer-events: none;
        visibility: hidden; /* Ajouté */
        transition: opacity 0.2s ease, visibility 0s ease 0.2s, max-width 0.3s ease 0.05s, margin-left 0.3s ease 0.05s; /* Transition visibility avec délai */
      }

      // Annule effet hover de translation
      &:hover {
        transform: none; // Pas de décalage au survol
        // Garde le fond léger pour indiquer le survol
        background: rgba(255, 255, 255, 0.1);
      }

      // Style item actif réduit
      &.page_actuelle {
        // Utilise une version semi-transparente de l'orange pour différencier de l'état étendu
        background-color: rgba(var(--main-orange-rgb), 0.7);
        &:hover {
          background-color: rgba(var(--main-orange-rgb), 0.7); // Garde la même couleur au survol
        }
      }
      // Ajustement focus si besoin
      &:focus-visible {
        outline-offset: -2px; // Reste à l'intérieur
        background: rgba(255, 255, 255, 0.1); // Cohérent avec hover
      }
    }

    // --- Footer Réduit ---
    .sidebar-footer {
      // Le bouton toggle reste centré, pas de changement nécessaire ici par défaut
    }

  } // Fin &.is-collapsed

} // Fin .sidebar desktop

/* ====================================== */
/* == STYLES MOBILE (<= 768px) - Barre EN BAS == */
/* ====================================== */
@media screen and (max-width: 768px) {

  // Cache la sidebar latérale
  .sidebar {
    width: 100%; // Pleine largeur.
    min-width: unset; // Annule min-width desktop.
    height: var(--bottom-nav-height-mobile); // Utilise variable pour hauteur fixe.
    bottom: 0; // Collée en bas.
    top: auto; // Annule positionnement haut.
    left: 0; // Collée à gauche.
    flex-direction: row; // Items horizontaux.
    justify-content: center; // Centre ul.menu-items horizontalement.
    padding: 0; // Pas de padding global sur la barre.
    background-color: var(--main-white); // Fond blanc pour mobile.
    border-top: 1px solid var(--border-color); // Bordure haute légère.
    box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.05); // Ombre légère vers le haut.
    // Annule la transition de largeur qui n'est pas pertinente ici
    transition: none;

    // Cacher logo et footer (contient le toggle) sur mobile.
    .logo-container,
    .sidebar-footer {
      display: none;
    }

    // Adapter la liste des items.
    .menu-items {
      display: flex; // Met les <li> en ligne.
      justify-content: space-around; // Répartit les <li> équitablement.
      align-items: stretch; // Étire les <li> pour remplir la hauteur de la barre.
      flex-grow: 1; // Prend toute la largeur disponible.
      height: 100%; // Prend toute la hauteur de la barre.
      overflow: hidden; // Empêche le débordement.
      // Annule scroll-y desktop
      overflow-y: hidden;
    }

    // Adapter chaque item <li>.
    ul.menu-items li {
      margin-bottom: 0; // Annule marge verticale du desktop.
      flex: 1; // Chaque <li> prend une part égale de la largeur.
      display: flex; // Pour pouvoir centrer le contenu de <a>.
      overflow: visible; // Annule overflow: hidden du desktop qui pourrait couper des indicateurs.
    }

    // Adapter les liens <a>.
    ul.menu-items li a {
      flex-direction: column; // Icône au-dessus du texte (si texte visible).
      justify-content: center; // Centre verticalement le contenu (icône/texte).
      align-items: center; // Centre horizontalement le contenu.
      padding: var(--spacing-xs) 0; // Padding vertical réduit, horizontal reset.
      gap: 4px; // Espace réduit entre icône et texte (si texte visible).
      color: var(--text-medium); // Couleur par défaut discrète pour les items inactifs.
      border-radius: 0; // Annule coins arrondis du desktop.
      width: 100%; height: 100%; // Prend tout l'espace du <li> parent.
      font-size: 0.75rem; // Texte plus petit sur mobile.
      white-space: nowrap; // Empêche le texte de passer à la ligne.
      // Annule transitions du desktop.
      transition: none;

      // Icônes sur mobile.
      lucide-icon {
        width: var(--icon-size-mobile); // Utilise la variable de taille mobile.
        height: var(--icon-size-mobile);
        margin-bottom: 0; // Pas de marge sous l'icône si texte caché.
        stroke-width: 2px;
        stroke: currentColor; // Hérite couleur du <a>
      }

      // Texte des liens mobile.
      .menu-item-text {
        display: block; // Rendre le texte visible sur mobile (ajuster si besoin)
        // Reset des styles de transition/masquage du desktop
        opacity: 1; max-width: none; margin-left: 0; pointer-events: auto; transition: none;
        // Assurer que le texte ne cause pas de problèmes de layout
        overflow: hidden; text-overflow: ellipsis; white-space: nowrap;
        line-height: 1.2; // Ajuster l'espacement vertical si nécessaire
      }

      // Annuler effets hover/focus spécifiques du desktop.
      &:hover { background: none; transform: none; }
      &:focus-visible { outline: none; background: none; } // Pas d'outline spécifique ici (le focus sera indiqué par la couleur active)

      // État actif mobile.
      &.page_actuelle {
        background-color: transparent; // Pas de fond de couleur.
        color: var(--main-orange); // Couleur active (orange).
        font-weight: 600; // Texte en gras pour l'actif.

        // Optionnel: Ajouter un indicateur visuel différent si souhaité
        // Par exemple, une bordure supérieure :
        // border-top: 3px solid var(--main-orange);
        // padding-top: calc(var(--spacing-xs) - 3px); // Ajuster le padding pour compenser la bordure
      }
    }
  } // Fin .sidebar @media mobile

} // Fin @media screen and (max-width: 768px)


/*------------------------------------*\
  #UTILS: VISUALLY HIDDEN (Accessibilité)
  Optionnel: Si vous avez besoin de cacher du texte
  tout en le laissant lisible par les lecteurs d'écran.
\*------------------------------------*/
.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; /* Ajouté */
  border: 0;
}

// --- RAPPEL IMPORTANT ---
// N'oubliez pas d'ajuster la marge gauche (margin-left) de votre conteneur de contenu principal
// (par exemple `.main-content-area` ou similaire) en fonction de l'état de la sidebar
// (étendue ou réduite) via JavaScript ou une classe sur le body/layout container.
// Et sur mobile, ajustez la marge inférieure (padding-bottom ou margin-bottom) pour
// éviter que la barre de navigation inférieure ne recouvre le contenu.
